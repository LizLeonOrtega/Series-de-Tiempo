###   1er Class

###   Funciones basicas
# - Intro

#   Directorio de Trabajo

setwd("C:/Users/Sala-D23/Documents/Series de Tiempo")
getwd()

#   Calculadora

3+4
3^4
3*4-1+2

sqrt(10)   #  Raiz
exp(10)    #  exp(x) = e^x
log(10)    #  log base e

log(10,10)
log(10,base = 10)

squareroot(10)  #ejemplo de error

pi

#############################################
# Asignación

x = 1000
x <- 1000
x + 3

e^3
e = exp(2)
e^3

# Vector: Operador c, concatena elementos o vectores:

salarios = c(40000, 50000, 55000)
salarios <- c(40000, 50000, 55000)

salarios1 = c(40000, 50000, 55000)
salarios2 <- c(40000, 55000, 50000)

# Combinando vectores
salarios3 <- c(40000, 50000, 55000)
salarios4 <- c(10000, 15000, 20000)
salarios5 <- c(salarios3, salarios4)

# Vectores con distinto tipo de datos
alumnos <- c("Elisa","Bonifacio", "Edgar")
alumnos.salarios <- c("Elisa","Bonifacio", "Edgar",40000, 50000, 55000)

# Funciones y vectores
sum(salarios3)
length(salarios3)
sum(salarios3/length(salarios3))
mean(salarios3)

# Otras funciones: sort(), min(), max(), range(), 
salarios5 <- c(1000, 2000, 3000)
salarios3 + salarios5
salarios3 - salarios5

# Varianza
x = c(20,22,24,26,28)
mediax = mean(x)
(x - mediax)^2 # Diferencia de cuadrados
sum((x-mediax)^2) #Suma de diferencias al cuadrado
n = length(x)
sum((x - mediax)^2)/(n-1)

var(x)
mean(x)
sd(x)

#####################################################################################
#   Instalacion de paquetes
install.packages("Giza")
#   Apertura de librerias
library(Giza)

install.packages("RODBC")
library(RODBC)

#   Comprehensive R Archive Network (CRAN) y dudas
??Giza

help(sum)
help("summary")

###   Lectura de datos

#   Formato csv
install.packages(c("readr","readxl"))
library(readr)
datos_csv <- read_csv()

#   Formato excel
library(readxl)

##########################################################
################################################
#Lectura de datos: 12 - 02 - 2018
#Instalación

#Forma más facil de leer es instalar todo el tidyverse
install.packages("tidyverse")

#Alternativamente, instale solo "readr" que forma parte de "tidyverse":
install.packages("readr")

#readr es una funcion que forma parte de tidyverse

#read_csv():Archivos delimitados por comas
#read_tsv():Archivo delimitado por tabulados
#read_delim():Archivos delimitados generales
#read_fwf():Archivos de ancho fijo
#read_table():Archivos tabulares donde las columnas estan separados por espacios
#read_log(): archivos por registros web

mtcars <- read.csv(readr_example("mtcars.csv"))

#Formato csv
library(readr)
datos_csv <- read.csv("C:/Users/Sala-D9/Desktop/Series de tiempo/clase1.csv")

#Formato excel
library(readxl)
datos_excel <- read_excel("C:/Users/Sala-D9/Desktop/Series de tiempo/ventas.xlsx")
head(datos_excel)
tail(datos_excel)

#Formato spss
library(haven)
datos_spss <- read_sav("C:/Users/Sala-D9/Desktop/Series de tiempo/ejemplo.sav")

#Formato stata
library(haven)
datos_stata <- read_stata("C:/Users/Sala-D9/Desktop/Series de tiempo/clase.dta")

#Formato sas
library(haven)
datos_sas <- read_sas("C:/Users/Sala-D9/Desktop/Series de tiempo/arima_est2.sas7bdat")

#Datos de sitios web
data2 <- read.table("http://www.bio.ic.ac.uk/research/mjcraw/therbook/data/cancer.txt")
head(data2)

#####################################################
#Almacenando datos
write.csv <- (datos_csv,"C:/Users/Sala-D9/Desktop/Series de tiempo")

#Datos en forma binario
install.packages("feather")
library(feather)
write_feather <- (datos_csv,"C:/Users/Sala-D9/Desktop/Series de tiempo")

######################################################
#Marco de datos 
#Un data frame "imita" un conjunto de datos que tienen la estructura de una matriz,
#pero se trata de una lista cuyos elementos son vectores o factores (columnas)

observacion <- c(1,2,3,4,5,6,7,8,9,10)
nombre <- c("A1","A2","A3","A4","A5","A6","A7","A8","A9","A10")
edad <- c(28,17,18,22,30,27,22,24,23,21)
ciudad <- c("Toluca","México","Guadalajara","Toluca","Monterrey", "Toluca","Guadalajara","México","México","México")
ingreso <- c(2000,3000,2000,3500,2500,4000,4200,2850,2330,1970)
alumnos <- data.frame(Identificador=observacion,Persona=nombre,Edad=edad,Ciudad=ciudad,Ingreso=ingreso)
View(alumnos)
head(alumnos)

#Acceder a los datos de un data frame
#leyendo los datos como una matriz
alumnos [,1]
alumnos [1,]
alumnos [1,1]
alumnos [4,]

alumnos[,"Ingreso"]
alumnos$Ingreso

alumnos[1:3,]
alumnos[,c(1,2)]

alumnos[alumnos$Edad>=30,]

# Creamos otro data frame
edocivil <- c("Viudo","Soltero", "Soltero","Soltero","Casado","Casado","Soltero", "Soltero","Soltero","Soltero")
alumnos2 <- data.frame(Identificador=observacion,EdoCivil=edocivil)
View(alumnos2)

#Podemos combinar "merge" los data frame
merge(alumnos,alumnos2,by="Identificador")

#Ordenar el data frame
alumnos[order(alumnos$Edad,decreasing = TRUE),]
